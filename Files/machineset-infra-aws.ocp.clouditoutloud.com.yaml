apiVersion: machine.openshift.io/v1beta1
kind: MachineSet
metadata:
  labels:
    machine.openshift.io/cluster-api-cluster: ${INFRASTRUCTURE_ID} 
  name: ${INFRASTRUCTURE_ID}-infra-${AWS_ZONE} 
  namespace: openshift-machine-api
spec:
  replicas: 1
  selector:
    matchLabels:
      machine.openshift.io/cluster-api-cluster: ${INFRASTRUCTURE_ID} 
      machine.openshift.io/cluster-api-machineset: ${INFRASTRUCTURE_ID}-infra-${AWS_ZONE} 
  template:
    metadata:
      labels:
        machine.openshift.io/cluster-api-cluster: ${INFRASTRUCTURE_ID} 
        machine.openshift.io/cluster-api-machine-role: <infra> 
        machine.openshift.io/cluster-api-machine-type: <infra> 
        machine.openshift.io/cluster-api-machineset: ${INFRASTRUCTURE_ID}-infra-${AWS_ZONE} 
    spec:
      metadata:
        labels:
          node-role.kubernetes.io/infra: "" 
      taints: 
        - key: node-role.kubernetes.io/infra
          effect: NoSchedule
      providerSpec:
        value:
          ami:
            id: ${AMI_ID}
          apiVersion: awsproviderconfig.openshift.io/v1beta1
          blockDevices:
            - ebs:
                iops: 0
                volumeSize: 120
                volumeType: gp2
          credentialsSecret:
            name: aws-cloud-credentials
          deviceIndex: 0
          iamInstanceProfile:
            id: ${INFRASTRUCTURE_ID}-worker-profile 
          instanceType: m6i.large
          kind: AWSMachineProviderConfig
          placement:
            availabilityZone: $AWS_ZONE
            region: $AWS_REGION
          securityGroups:
            - filters:
                - name: tag:Name
                  values:
                    - ${INFRASTRUCTURE_ID}-worker-sg 
          subnet:
            filters:
              - name: tag:Name
                values:
                  - ${INFRASTRUCTURE_ID}-private-$AWS_ZONE
          tags:
            - name: kubernetes.io/cluster/${INFRASTRUCTURE_ID} 
              value: owned
          userDataSecret:
            name: worker-user-data
